{
  "name": "git-gpt",
  "displayName": "Chat with AI for Git",
  "description": "",
  "version": "0.0.3",
  "engines": {
    "vscode": "^1.95.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "languageModelTools": [
      {
        "name": "open_git_log_viewer",
        "displayName": "Open git log viewer",
        "toolReferenceName": "openGitLogViewer",
        "canBeReferencedInPrompt": true,
        "userDescription": "",
        "modelDescription": "This tool opens a custom VSCode webview panel that visualizes the Git commit log as a graph. It is useful when the user asks to view the Git commit history, log tree, branch structure, or recent Git activity in a graphical form. Ideal for prompts like 'show me the commit history' or 'open git log graph'."
      },
      {
        "name": "visualize_git_log",
        "displayName": "Visualize Git Log",
        "toolReferenceName": "visualizeGitLog",
        "canBeReferencedInPrompt": true,
        "userDescription": "Visualizes a simulated Git log tree in the webview.",
        "modelDescription": "This tool visually renders a simulated Git log tree in a webview panel. It is ideal for illustrating how the commit history might look after running a Git command (e.g. creating a branch, merging, or rebasing). To use it, the assistant should first run:\n`git log --all --pretty=format:\"%h (%an) (%ar) (%s) %d [%p]\"`\nto understand the current state, then predict how that history would change after the new command and pass that updated log as the tool's argument. This helps users visualize potential changes to their Git repository in an intuitive, graphical format.The assistant is encouraged to use this tool proactively before executing any command that would alter the Git history, to help users preview the effect beforehand.",
        "inputSchema": {
          "type": "object",
          "properties": {
            "logTree": {
              "type": "string",
              "description": "Log tree"
            }
          },
          "required": [
            "logTree"
          ]
        }
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "gitgpt.openGitLogViewer",
          "group": "navigation"
        }
      ]
    },
    "commands": [
      {
        "command": "gitgpt.openGitLogViewer",
        "title": "GitGPT: Open Git Log Viewer",
        "icon": "$(git-branch)"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack && cp ./src/**.html ./dist",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.4",
    "@types/mocha": "^9.0.0",
    "@types/node": "14.x",
    "@types/vscode": "^1.99.1",
    "@typescript-eslint/eslint-plugin": "^5.1.0",
    "@typescript-eslint/parser": "^5.1.0",
    "@vscode/test-electron": "^1.6.2",
    "copy-webpack-plugin": "^12.0.2",
    "eslint": "^8.1.0",
    "glob": "^7.1.7",
    "mocha": "^9.1.3",
    "ts-loader": "^9.2.5",
    "typescript": "^4.4.4",
    "webpack": "^5.52.1",
    "webpack-cli": "^4.8.0"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.9.0",
    "axios": "^1.7.8",
    "dotenv": "^16.4.7",
    "groq-sdk": "^0.9.1",
    "iconv-lite": "^0.6.3"
  }
}